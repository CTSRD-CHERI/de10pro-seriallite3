<?xml version="1.0" ?>
<!--Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.-->
<ipxact:design xmlns:altera="http://www.altera.com/XMLSchema/IPXact2014/extensions" xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014">
  <ipxact:vendor>Altera Corporation</ipxact:vendor>
  <ipxact:library>soc</ipxact:library>
  <ipxact:name>soc</ipxact:name>
  <ipxact:version>1.0</ipxact:version>
  <ipxact:componentInstances></ipxact:componentInstances>
  <ipxact:vendorExtensions>
    <altera:catalog_card_info>
      <altera:name>$${FILENAME}</altera:name>
      <altera:displayName>$${FILENAME}</altera:displayName>
      <altera:version>1.0</altera:version>
      <altera:tags></altera:tags>
      <altera:categories></altera:categories>
      <altera:tool>QsysPro</altera:tool>
    </altera:catalog_card_info>
    <altera:altera_system_parameters>
      <ipxact:parameters>
        <ipxact:parameter parameterId="bonusData" type="string">
          <ipxact:name>bonusData</ipxact:name>
          <ipxact:displayName>bonusData</ipxact:displayName>
          <ipxact:value>bonusData 
{
   element clock_in_100
   {
      datum _sortIndex
      {
         value = "0";
         type = "int";
      }
   }
   element intel_niosv_m_0
   {
      datum _sortIndex
      {
         value = "2";
         type = "int";
      }
   }
   element intel_niosv_m_0.dm_agent
   {
      datum baseAddress
      {
         value = "65536";
         type = "String";
      }
   }
   element intel_niosv_m_0.timer_sw_agent
   {
      datum baseAddress
      {
         value = "131072";
         type = "String";
      }
   }
   element jtag_uart_0
   {
      datum _sortIndex
      {
         value = "4";
         type = "int";
      }
   }
   element jtag_uart_0.avalon_jtag_slave
   {
      datum baseAddress
      {
         value = "131216";
         type = "String";
      }
   }
   element ram64k
   {
      datum _sortIndex
      {
         value = "3";
         type = "int";
      }
   }
   element ram64k.s1
   {
      datum _lockedAddress
      {
         value = "1";
         type = "boolean";
      }
   }
   element reset_in_100
   {
      datum _sortIndex
      {
         value = "1";
         type = "int";
      }
   }
   element rx_fifo
   {
      datum _sortIndex
      {
         value = "6";
         type = "int";
      }
   }
   element rx_fifo.in_csr
   {
      datum baseAddress
      {
         value = "131136";
         type = "String";
      }
   }
   element rx_fifo.out
   {
      datum baseAddress
      {
         value = "131200";
         type = "String";
      }
   }
   element tx_fifo
   {
      datum _sortIndex
      {
         value = "5";
         type = "int";
      }
   }
   element tx_fifo.in
   {
      datum baseAddress
      {
         value = "131208";
         type = "String";
      }
   }
   element tx_fifo.in_csr
   {
      datum baseAddress
      {
         value = "131168";
         type = "String";
      }
   }
}
</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="designId" type="string">
          <ipxact:name>designId</ipxact:name>
          <ipxact:displayName>designId</ipxact:displayName>
          <ipxact:value></ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="device" type="string">
          <ipxact:name>device</ipxact:name>
          <ipxact:displayName>Device</ipxact:displayName>
          <ipxact:value>1SX280HU2F50E1VG</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="deviceFamily" type="string">
          <ipxact:name>deviceFamily</ipxact:name>
          <ipxact:displayName>Device family</ipxact:displayName>
          <ipxact:value>Stratix 10</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="deviceSpeedGrade" type="string">
          <ipxact:name>deviceSpeedGrade</ipxact:name>
          <ipxact:displayName>Device Speed Grade</ipxact:displayName>
          <ipxact:value>1</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="fabricMode" type="string">
          <ipxact:name>fabricMode</ipxact:name>
          <ipxact:displayName>fabricMode</ipxact:displayName>
          <ipxact:value>QSYS</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="generateLegacySim" type="bit">
          <ipxact:name>generateLegacySim</ipxact:name>
          <ipxact:displayName>generateLegacySim</ipxact:displayName>
          <ipxact:value>false</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="generationId" type="int">
          <ipxact:name>generationId</ipxact:name>
          <ipxact:displayName>Generation Id</ipxact:displayName>
          <ipxact:value>0</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="globalResetBus" type="bit">
          <ipxact:name>globalResetBus</ipxact:name>
          <ipxact:displayName>Global reset</ipxact:displayName>
          <ipxact:value>false</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="hdlLanguage" type="string">
          <ipxact:name>hdlLanguage</ipxact:name>
          <ipxact:displayName>hdlLanguage</ipxact:displayName>
          <ipxact:value>VERILOG</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="hideFromIPCatalog" type="bit">
          <ipxact:name>hideFromIPCatalog</ipxact:name>
          <ipxact:displayName>Hide from IP Catalog</ipxact:displayName>
          <ipxact:value>false</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="lockedInterfaceDefinition" type="string">
          <ipxact:name>lockedInterfaceDefinition</ipxact:name>
          <ipxact:displayName>lockedInterfaceDefinition</ipxact:displayName>
          <ipxact:value></ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="sopcBorderPoints" type="bit">
          <ipxact:name>sopcBorderPoints</ipxact:name>
          <ipxact:displayName>Use SOPC Builder port naming</ipxact:displayName>
          <ipxact:value>false</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="systemHash" type="longint">
          <ipxact:name>systemHash</ipxact:name>
          <ipxact:displayName>systemHash</ipxact:displayName>
          <ipxact:value>0</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="systemInfos" type="string">
          <ipxact:name>systemInfos</ipxact:name>
          <ipxact:displayName>systemInfos</ipxact:displayName>
          <ipxact:value>&lt;systemInfosDefinition&gt;
    &lt;connPtSystemInfos&gt;
        &lt;entry&gt;
            &lt;key&gt;clk&lt;/key&gt;
            &lt;value&gt;
                &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                &lt;suppliedSystemInfos&gt;
                    &lt;entry&gt;
                        &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/suppliedSystemInfos&gt;
                &lt;consumedSystemInfos/&gt;
            &lt;/value&gt;
        &lt;/entry&gt;
    &lt;/connPtSystemInfos&gt;
&lt;/systemInfosDefinition&gt;</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="systemScripts" type="string">
          <ipxact:name>systemScripts</ipxact:name>
          <ipxact:displayName>systemScripts</ipxact:displayName>
          <ipxact:value></ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="testBenchDutName" type="string">
          <ipxact:name>testBenchDutName</ipxact:name>
          <ipxact:displayName>Use Test Bench Naming Pattern</ipxact:displayName>
          <ipxact:value></ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="timeStamp" type="longint">
          <ipxact:name>timeStamp</ipxact:name>
          <ipxact:displayName>timeStamp</ipxact:displayName>
          <ipxact:value>0</ipxact:value>
        </ipxact:parameter>
        <ipxact:parameter parameterId="useTestBenchNamingPattern" type="bit">
          <ipxact:name>useTestBenchNamingPattern</ipxact:name>
          <ipxact:displayName>Use Test Bench Naming Pattern</ipxact:displayName>
          <ipxact:value>false</ipxact:value>
        </ipxact:parameter>
      </ipxact:parameters>
    </altera:altera_system_parameters>
    <altera:instance_parameters></altera:instance_parameters>
    <altera:instance_script></altera:instance_script>
    <altera:modules>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>clock_in_100</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;in_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;in_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_clock_bridge&lt;/className&gt;
        &lt;version&gt;19.2.0&lt;/version&gt;
        &lt;displayName&gt;Clock Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;DERIVED_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;in_clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;in_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;in_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;100000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_clock_in&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_clock_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_clock_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_clock_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_clock_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_clock_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_clock_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_clock_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_clock_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_clock_in.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>intel_niosv_m_0</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;platform_irq_rx&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;platform_irq_rx_irq&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;16&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqMap&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;instruction_manager&lt;/name&gt;
                &lt;type&gt;axi4&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_awaddr&lt;/name&gt;
                        &lt;role&gt;awaddr&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_awsize&lt;/name&gt;
                        &lt;role&gt;awsize&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_awprot&lt;/name&gt;
                        &lt;role&gt;awprot&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_awvalid&lt;/name&gt;
                        &lt;role&gt;awvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_awready&lt;/name&gt;
                        &lt;role&gt;awready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_wdata&lt;/name&gt;
                        &lt;role&gt;wdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_wstrb&lt;/name&gt;
                        &lt;role&gt;wstrb&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_wlast&lt;/name&gt;
                        &lt;role&gt;wlast&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_wvalid&lt;/name&gt;
                        &lt;role&gt;wvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_wready&lt;/name&gt;
                        &lt;role&gt;wready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_bresp&lt;/name&gt;
                        &lt;role&gt;bresp&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_bvalid&lt;/name&gt;
                        &lt;role&gt;bvalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_bready&lt;/name&gt;
                        &lt;role&gt;bready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_araddr&lt;/name&gt;
                        &lt;role&gt;araddr&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_arsize&lt;/name&gt;
                        &lt;role&gt;arsize&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_arprot&lt;/name&gt;
                        &lt;role&gt;arprot&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_arvalid&lt;/name&gt;
                        &lt;role&gt;arvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_arready&lt;/name&gt;
                        &lt;role&gt;arready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_rdata&lt;/name&gt;
                        &lt;role&gt;rdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_rresp&lt;/name&gt;
                        &lt;role&gt;rresp&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_rvalid&lt;/name&gt;
                        &lt;role&gt;rvalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;instruction_manager_rready&lt;/name&gt;
                        &lt;role&gt;rready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;trustzoneAware&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingReads&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingWrites&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readIssuingCapability&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeIssuingCapability&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;combinedIssuingCapability&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesINCRBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesWRAPBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesFIXEDBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;data_manager&lt;/name&gt;
                &lt;type&gt;axi4&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_awaddr&lt;/name&gt;
                        &lt;role&gt;awaddr&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_awsize&lt;/name&gt;
                        &lt;role&gt;awsize&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_awprot&lt;/name&gt;
                        &lt;role&gt;awprot&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_awvalid&lt;/name&gt;
                        &lt;role&gt;awvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_awready&lt;/name&gt;
                        &lt;role&gt;awready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_wdata&lt;/name&gt;
                        &lt;role&gt;wdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_wstrb&lt;/name&gt;
                        &lt;role&gt;wstrb&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_wlast&lt;/name&gt;
                        &lt;role&gt;wlast&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_wvalid&lt;/name&gt;
                        &lt;role&gt;wvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_wready&lt;/name&gt;
                        &lt;role&gt;wready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_bresp&lt;/name&gt;
                        &lt;role&gt;bresp&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_bvalid&lt;/name&gt;
                        &lt;role&gt;bvalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_bready&lt;/name&gt;
                        &lt;role&gt;bready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_araddr&lt;/name&gt;
                        &lt;role&gt;araddr&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_arsize&lt;/name&gt;
                        &lt;role&gt;arsize&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_arprot&lt;/name&gt;
                        &lt;role&gt;arprot&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_arvalid&lt;/name&gt;
                        &lt;role&gt;arvalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_arready&lt;/name&gt;
                        &lt;role&gt;arready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_rdata&lt;/name&gt;
                        &lt;role&gt;rdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_rresp&lt;/name&gt;
                        &lt;role&gt;rresp&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_rvalid&lt;/name&gt;
                        &lt;role&gt;rvalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;data_manager_rready&lt;/name&gt;
                        &lt;role&gt;rready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;trustzoneAware&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingReads&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingWrites&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumOutstandingTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readIssuingCapability&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeIssuingCapability&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;combinedIssuingCapability&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesINCRBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesWRAPBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;issuesFIXEDBursts&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;timer_sw_agent&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;6&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;timer_sw_agent_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.connect&lt;/key&gt;
                            &lt;value&gt;data_manager&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;dm_agent&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;16&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;dm_agent_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.connect&lt;/key&gt;
                            &lt;value&gt;instruction_manager,data_manager&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;65536&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;intel_niosv_m&lt;/className&gt;
        &lt;version&gt;21.1.0&lt;/version&gt;
        &lt;displayName&gt;Nios V/m Processor Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_CLK_CLOCK_DOMAIN&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_DOMAIN&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_CLK_RESET_DOMAIN&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;RESET_DOMAIN&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterName&gt;AUTO_DATA_MANAGER_ADDRESS_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;com.altera.entityinterfaces.moduleext.AddressWidthType&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;data_manager&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE_FAMILY&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FAMILY&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE_SPEEDGRADE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_SPEEDGRADE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterName&gt;AUTO_INSTRUCTION_MANAGER_ADDRESS_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;com.altera.entityinterfaces.moduleext.AddressWidthType&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;instruction_manager&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_PLATFORM_IRQ_RX_INTERRUPTS_USED&lt;/parameterName&gt;
                &lt;parameterType&gt;java.math.BigInteger&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;platform_irq_rx&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;INTERRUPTS_USED&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;50000000&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;clockFrequency&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;dataSlaveMapParam&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;data_manager&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_MAP&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;instSlaveMapParam&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;instruction_manager&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_MAP&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_DOMAIN&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;RESET_DOMAIN&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;data_manager&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;data_manager&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='ram64k.s1' start='0x0' end='0x10000' datawidth='32' /&amp;gt;&amp;lt;slave name='intel_niosv_m_0.dm_agent' start='0x10000' end='0x20000' datawidth='32' /&amp;gt;&amp;lt;slave name='intel_niosv_m_0.timer_sw_agent' start='0x20000' end='0x20040' datawidth='32' /&amp;gt;&amp;lt;slave name='rx_fifo.in_csr' start='0x20040' end='0x20060' datawidth='32' /&amp;gt;&amp;lt;slave name='tx_fifo.in_csr' start='0x20060' end='0x20080' datawidth='32' /&amp;gt;&amp;lt;slave name='rx_fifo.out' start='0x20080' end='0x20088' datawidth='32' /&amp;gt;&amp;lt;slave name='tx_fifo.in' start='0x20088' end='0x20090' datawidth='32' /&amp;gt;&amp;lt;slave name='jtag_uart_0.avalon_jtag_slave' start='0x20090' end='0x20098' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;18&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;dm_agent&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;dm_agent&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='dm_agent' start='0x0' end='0x10000' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;16&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;instruction_manager&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;instruction_manager&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='ram64k.s1' start='0x0' end='0x10000' datawidth='32' /&amp;gt;&amp;lt;slave name='intel_niosv_m_0.dm_agent' start='0x10000' end='0x20000' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;17&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;platform_irq_rx&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;platform_irq_rx&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;INTERRUPTS_USED&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;timer_sw_agent&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;timer_sw_agent&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='timer_sw_agent' start='0x0' end='0x40' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;6&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;platform_irq_rx&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;platform_irq_rx_irq&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;16&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqMap&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;instruction_manager&lt;/name&gt;
            &lt;type&gt;axi4&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_awaddr&lt;/name&gt;
                    &lt;role&gt;awaddr&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_awsize&lt;/name&gt;
                    &lt;role&gt;awsize&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_awprot&lt;/name&gt;
                    &lt;role&gt;awprot&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_awvalid&lt;/name&gt;
                    &lt;role&gt;awvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_awready&lt;/name&gt;
                    &lt;role&gt;awready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_wdata&lt;/name&gt;
                    &lt;role&gt;wdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_wstrb&lt;/name&gt;
                    &lt;role&gt;wstrb&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_wlast&lt;/name&gt;
                    &lt;role&gt;wlast&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_wvalid&lt;/name&gt;
                    &lt;role&gt;wvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_wready&lt;/name&gt;
                    &lt;role&gt;wready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_bresp&lt;/name&gt;
                    &lt;role&gt;bresp&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_bvalid&lt;/name&gt;
                    &lt;role&gt;bvalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_bready&lt;/name&gt;
                    &lt;role&gt;bready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_araddr&lt;/name&gt;
                    &lt;role&gt;araddr&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_arsize&lt;/name&gt;
                    &lt;role&gt;arsize&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_arprot&lt;/name&gt;
                    &lt;role&gt;arprot&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_arvalid&lt;/name&gt;
                    &lt;role&gt;arvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_arready&lt;/name&gt;
                    &lt;role&gt;arready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_rdata&lt;/name&gt;
                    &lt;role&gt;rdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_rresp&lt;/name&gt;
                    &lt;role&gt;rresp&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_rvalid&lt;/name&gt;
                    &lt;role&gt;rvalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;instruction_manager_rready&lt;/name&gt;
                    &lt;role&gt;rready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;trustzoneAware&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingReads&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingWrites&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readIssuingCapability&lt;/key&gt;
                        &lt;value&gt;2&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeIssuingCapability&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;combinedIssuingCapability&lt;/key&gt;
                        &lt;value&gt;2&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesINCRBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesWRAPBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesFIXEDBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;data_manager&lt;/name&gt;
            &lt;type&gt;axi4&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_awaddr&lt;/name&gt;
                    &lt;role&gt;awaddr&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_awsize&lt;/name&gt;
                    &lt;role&gt;awsize&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_awprot&lt;/name&gt;
                    &lt;role&gt;awprot&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_awvalid&lt;/name&gt;
                    &lt;role&gt;awvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_awready&lt;/name&gt;
                    &lt;role&gt;awready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_wdata&lt;/name&gt;
                    &lt;role&gt;wdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_wstrb&lt;/name&gt;
                    &lt;role&gt;wstrb&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_wlast&lt;/name&gt;
                    &lt;role&gt;wlast&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_wvalid&lt;/name&gt;
                    &lt;role&gt;wvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_wready&lt;/name&gt;
                    &lt;role&gt;wready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_bresp&lt;/name&gt;
                    &lt;role&gt;bresp&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_bvalid&lt;/name&gt;
                    &lt;role&gt;bvalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_bready&lt;/name&gt;
                    &lt;role&gt;bready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_araddr&lt;/name&gt;
                    &lt;role&gt;araddr&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_arsize&lt;/name&gt;
                    &lt;role&gt;arsize&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_arprot&lt;/name&gt;
                    &lt;role&gt;arprot&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_arvalid&lt;/name&gt;
                    &lt;role&gt;arvalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_arready&lt;/name&gt;
                    &lt;role&gt;arready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_rdata&lt;/name&gt;
                    &lt;role&gt;rdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_rresp&lt;/name&gt;
                    &lt;role&gt;rresp&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_rvalid&lt;/name&gt;
                    &lt;role&gt;rvalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;data_manager_rready&lt;/name&gt;
                    &lt;role&gt;rready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;trustzoneAware&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingReads&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingWrites&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumOutstandingTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readIssuingCapability&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeIssuingCapability&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;combinedIssuingCapability&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesINCRBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesWRAPBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;issuesFIXEDBursts&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;timer_sw_agent&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;6&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;timer_sw_agent_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.connect&lt;/key&gt;
                        &lt;value&gt;data_manager&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;2&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;dm_agent&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;16&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;dm_agent_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.connect&lt;/key&gt;
                        &lt;value&gt;instruction_manager,data_manager&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;65536&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;2&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_intel_niosv_m_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_niosv_m_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_niosv_m_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_niosv_m_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_niosv_m_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_niosv_m_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_niosv_m_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_niosv_m_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_niosv_m_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_intel_niosv_m_0.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.CPU_FREQ&lt;/key&gt;
            &lt;value&gt;100000000u&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DATA_ADDR_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DCACHE_LINE_SIZE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DCACHE_LINE_SIZE_LOG2&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DCACHE_SIZE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.EXCEPTION_ADDR&lt;/key&gt;
            &lt;value&gt;0x00000020&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.HAS_DEBUG_STUB&lt;/key&gt;
            &lt;value&gt;&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ICACHE_LINE_SIZE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ICACHE_LINE_SIZE_LOG2&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ICACHE_SIZE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.INST_ADDR_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.MTIME_OFFSET&lt;/key&gt;
            &lt;value&gt;0x00020000&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.NUM_GPR&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.RESET_ADDR&lt;/key&gt;
            &lt;value&gt;0x00000000&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.TICKS_PER_SEC&lt;/key&gt;
            &lt;value&gt;no_quote(NIOSV_INTERNAL_TIMER_TICKS_PER_SECOND)&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.TIMER_DEVICE_TYPE&lt;/key&gt;
            &lt;value&gt;2&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.HDLSimCachesCleared&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.cpuArchitecture&lt;/key&gt;
            &lt;value&gt;Abbotts Lake&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.exceptionOffset&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.exceptionSlave&lt;/key&gt;
            &lt;value&gt;Absolute&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.isTimerDevice&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.numGpr&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.resetOffset&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.configuration.resetSlave&lt;/key&gt;
            &lt;value&gt;Absolute&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.altr,exception-addr&lt;/key&gt;
            &lt;value&gt;0x00000020&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.altr,reset-addr&lt;/key&gt;
            &lt;value&gt;0x00000000&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.clock-frequency&lt;/key&gt;
            &lt;value&gt;100000000u&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.dcache-line-size&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.dcache-size&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.icache-line-size&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.params.icache-size&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>jtag_uart_0</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;rst_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;avalon_jtag_slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_chipselect&lt;/name&gt;
                        &lt;role&gt;chipselect&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_read_n&lt;/name&gt;
                        &lt;role&gt;read_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_write_n&lt;/name&gt;
                        &lt;role&gt;write_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;NATIVE&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
                &lt;cmsisInfo&gt;
                    &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;    
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &amp;gt;
  &amp;lt;peripherals&amp;gt;
   &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_jtag_uart&amp;lt;/name&amp;gt;&amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt; 
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;8&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;     
         &amp;lt;name&amp;gt;DATA&amp;lt;/name&amp;gt;  
         &amp;lt;displayName&amp;gt;Data&amp;lt;/displayName&amp;gt;
         &amp;lt;description&amp;gt;Embedded software accesses the read and write FIFOs via the data register. A read from the data register returns the first character from the FIFO (if one is available) in the DATA field. Reading also returns information about the number of characters remaining in the FIFO in the RAVAIL field. A write to the data register stores the value of the DATA field in the write FIFO. If the write FIFO is full, the character is lost.&amp;lt;/description&amp;gt;
         &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
         &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
         &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
         &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
         &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt; 
         &amp;lt;fields&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;data&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;The value to transfer to/from the JTAG core. When writing, the DATA field holds a character to be written to the write FIFO. When reading, the DATA field holds a character read from the read FIFO.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x0&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;8&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;rvalid&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;Indicates whether the DATA field is valid. If RVALID=1, the DATA field is valid, otherwise DATA is undefined.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0xf&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ravail&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;The number of characters remaining in the read FIFO (after the current read).&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x10&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;16&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
       &amp;lt;/fields&amp;gt;
     &amp;lt;/register&amp;gt; 
        &amp;lt;register&amp;gt;     
         &amp;lt;name&amp;gt;CONTROL&amp;lt;/name&amp;gt;  
         &amp;lt;displayName&amp;gt;Control&amp;lt;/displayName&amp;gt;
         &amp;lt;description&amp;gt;Embedded software controls the JTAG UART core's interrupt generation and reads status information via the control register. A read from the control register returns the status of the read and write FIFOs. Writes to the register can be used to enable/disable interrupts, or clear the AC bit.&amp;lt;/description&amp;gt;
         &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
         &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
         &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
         &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
         &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt; 
         &amp;lt;fields&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;re&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Interrupt-enable bit for read interrupts.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x0&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;we&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Interrupt-enable bit for write interrupts&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x1&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ri&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that the read interrupt is pending.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x8&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;wi&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that the write interrupt is pending.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x9&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ac&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that there has been JTAG activity since the bit was cleared. Writing 1 to AC clears it to 0.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0xa&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;wspace&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;The number of spaces available in the write FIFO&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x10&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;16&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
       &amp;lt;/fields&amp;gt;
     &amp;lt;/register&amp;gt;            
    &amp;lt;/registers&amp;gt;
   &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt; &lt;/cmsisSrcFileContents&gt;
                    &lt;addressGroup&gt;&lt;/addressGroup&gt;
                    &lt;cmsisVars/&gt;
                &lt;/cmsisInfo&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;irq&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;av_irq&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                            &lt;value&gt;jtag_uart_0.avalon_jtag_slave&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;NONE&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_jtag_uart&lt;/className&gt;
        &lt;version&gt;19.1.0&lt;/version&gt;
        &lt;displayName&gt;JTAG UART Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;avalonSpec&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;AVALON_SPEC&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;clkFreq&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;avalon_jtag_slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;avalon_jtag_slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='avalon_jtag_slave' start='0x0' end='0x8' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;3&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;rst_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;avalon_jtag_slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;av_chipselect&lt;/name&gt;
                    &lt;role&gt;chipselect&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_read_n&lt;/name&gt;
                    &lt;role&gt;read_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_write_n&lt;/name&gt;
                    &lt;role&gt;write_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;av_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;NATIVE&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;2&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
            &lt;cmsisInfo&gt;
                &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;    
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &amp;gt;
  &amp;lt;peripherals&amp;gt;
   &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_jtag_uart&amp;lt;/name&amp;gt;&amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt; 
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;8&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;     
         &amp;lt;name&amp;gt;DATA&amp;lt;/name&amp;gt;  
         &amp;lt;displayName&amp;gt;Data&amp;lt;/displayName&amp;gt;
         &amp;lt;description&amp;gt;Embedded software accesses the read and write FIFOs via the data register. A read from the data register returns the first character from the FIFO (if one is available) in the DATA field. Reading also returns information about the number of characters remaining in the FIFO in the RAVAIL field. A write to the data register stores the value of the DATA field in the write FIFO. If the write FIFO is full, the character is lost.&amp;lt;/description&amp;gt;
         &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
         &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
         &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
         &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
         &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt; 
         &amp;lt;fields&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;data&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;The value to transfer to/from the JTAG core. When writing, the DATA field holds a character to be written to the write FIFO. When reading, the DATA field holds a character read from the read FIFO.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x0&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;8&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;rvalid&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;Indicates whether the DATA field is valid. If RVALID=1, the DATA field is valid, otherwise DATA is undefined.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0xf&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ravail&amp;lt;/name&amp;gt;
           &amp;lt;description&amp;gt;The number of characters remaining in the read FIFO (after the current read).&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x10&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;16&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
       &amp;lt;/fields&amp;gt;
     &amp;lt;/register&amp;gt; 
        &amp;lt;register&amp;gt;     
         &amp;lt;name&amp;gt;CONTROL&amp;lt;/name&amp;gt;  
         &amp;lt;displayName&amp;gt;Control&amp;lt;/displayName&amp;gt;
         &amp;lt;description&amp;gt;Embedded software controls the JTAG UART core's interrupt generation and reads status information via the control register. A read from the control register returns the status of the read and write FIFOs. Writes to the register can be used to enable/disable interrupts, or clear the AC bit.&amp;lt;/description&amp;gt;
         &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
         &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
         &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
         &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
         &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt; 
         &amp;lt;fields&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;re&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Interrupt-enable bit for read interrupts.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x0&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;we&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Interrupt-enable bit for write interrupts&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x1&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ri&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that the read interrupt is pending.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x8&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;wi&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that the write interrupt is pending.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x9&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;ac&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;Indicates that there has been JTAG activity since the bit was cleared. Writing 1 to AC clears it to 0.&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0xa&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;1&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
           &amp;lt;field&amp;gt;&amp;lt;name&amp;gt;wspace&amp;lt;/name&amp;gt;
            &amp;lt;description&amp;gt;The number of spaces available in the write FIFO&amp;lt;/description&amp;gt;
            &amp;lt;bitOffset&amp;gt;0x10&amp;lt;/bitOffset&amp;gt;
            &amp;lt;bitWidth&amp;gt;16&amp;lt;/bitWidth&amp;gt;
            &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
        &amp;lt;/field&amp;gt;
       &amp;lt;/fields&amp;gt;
     &amp;lt;/register&amp;gt;            
    &amp;lt;/registers&amp;gt;
   &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt; &lt;/cmsisSrcFileContents&gt;
                &lt;addressGroup&gt;&lt;/addressGroup&gt;
                &lt;cmsisVars/&gt;
            &lt;/cmsisInfo&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;irq&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;av_irq&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;value&gt;jtag_uart_0.avalon_jtag_slave&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;NONE&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_jtag_uart_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_jtag_uart_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_jtag_uart_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_jtag_uart_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_jtag_uart_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_jtag_uart_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_jtag_uart_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_jtag_uart_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_jtag_uart_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_jtag_uart_0.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.READ_DEPTH&lt;/key&gt;
            &lt;value&gt;64&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.READ_THRESHOLD&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.WRITE_DEPTH&lt;/key&gt;
            &lt;value&gt;64&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.WRITE_THRESHOLD&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.compatible&lt;/key&gt;
            &lt;value&gt;altr,juart-1.0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.group&lt;/key&gt;
            &lt;value&gt;serial&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.name&lt;/key&gt;
            &lt;value&gt;juart&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.dts.vendor&lt;/key&gt;
            &lt;value&gt;altr&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>ram64k</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk1&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s1&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;14&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;65536&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;65536&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset1&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_req&lt;/name&gt;
                        &lt;role&gt;reset_req&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;intel_onchip_memory&lt;/className&gt;
        &lt;version&gt;1.0.1&lt;/version&gt;
        &lt;displayName&gt;On-Chip Memory II (RAM or ROM) Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;autoInitializationFileName&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;UNIQUE_ID&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;NONE&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;deviceFamily&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FAMILY&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;NONE&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;deviceFeatures&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FEATURES&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;s1&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s1&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='s1' start='0x0' end='0x10000' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;16&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk1&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s1&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;14&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;65536&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;65536&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset1&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_req&lt;/name&gt;
                    &lt;role&gt;reset_req&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_intel_onchip_memory_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_onchip_memory_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_onchip_memory_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_onchip_memory_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_onchip_memory_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_onchip_memory_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_onchip_memory_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_intel_onchip_memory_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_intel_onchip_memory_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_intel_onchip_memory_0.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.CONTENTS_INFO&lt;/key&gt;
            &lt;value&gt;""&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DUAL_PORT&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.GUI_RAM_BLOCK_TYPE&lt;/key&gt;
            &lt;value&gt;AUTO&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.INIT_CONTENTS_FILE&lt;/key&gt;
            &lt;value&gt;soc_intel_onchip_memory_0_intel_onchip_memory_0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.INIT_MEM_CONTENT&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.INSTANCE_ID&lt;/key&gt;
            &lt;value&gt;NONE&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.NON_DEFAULT_INIT_FILE_ENABLED&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.RAM_BLOCK_TYPE&lt;/key&gt;
            &lt;value&gt;AUTO&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.READ_DURING_WRITE_MODE&lt;/key&gt;
            &lt;value&gt;DONT_CARE&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SINGLE_CLOCK_OP&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SIZE_MULTIPLE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SIZE_VALUE&lt;/key&gt;
            &lt;value&gt;65536&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.WRITABLE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.DAT_SYM_INSTALL_DIR&lt;/key&gt;
            &lt;value&gt;SIM_DIR&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.GENERATE_DAT_SYM&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.GENERATE_HEX&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.HAS_BYTE_LANE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.HEX_INSTALL_DIR&lt;/key&gt;
            &lt;value&gt;QPF_DIR&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.MEM_INIT_DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.memoryInfo.MEM_INIT_FILENAME&lt;/key&gt;
            &lt;value&gt;soc_intel_onchip_memory_0_intel_onchip_memory_0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;postgeneration.simulation.init_file.param_name&lt;/key&gt;
            &lt;value&gt;INIT_FILE&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;postgeneration.simulation.init_file.type&lt;/key&gt;
            &lt;value&gt;MEM_INIT&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>reset_in_100</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_reset_bridge&lt;/className&gt;
        &lt;version&gt;19.2.0&lt;/version&gt;
        &lt;displayName&gt;Reset Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_CLK_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_reset_in&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_reset_in.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>rx_fifo</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclock&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset_in&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_channel&lt;/name&gt;
                        &lt;role&gt;channel&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_error&lt;/name&gt;
                        &lt;role&gt;error&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_startofpacket&lt;/name&gt;
                        &lt;role&gt;startofpacket&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_endofpacket&lt;/name&gt;
                        &lt;role&gt;endofpacket&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_sink_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;255&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_read_slave_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_read_slave_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_read_slave_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_read_slave_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
                &lt;cmsisInfo&gt;
                    &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;2&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO MM OUT&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;16&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;FIFO_OUT&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;symbols&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[31:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;symbol&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The control register has four defined bits. ITO (Timeout Interrupt), CONT (continue), START, STOP&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Packet&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;packet&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the startofpacket signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;SOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the endofpacket signal.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the empty signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[15:8]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the channel signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 5, bits 8 to 12 are occupied and bits 13 to 15 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;CHANNEL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[23:16]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the error signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 3, bits 16 to 18 are occupied and bits 19 to 23 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ERROR&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                    &lt;addressGroup&gt;&lt;/addressGroup&gt;
                    &lt;cmsisVars/&gt;
                &lt;/cmsisInfo&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in_csr&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
                &lt;cmsisInfo&gt;
                    &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO IN CSR&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The instantaneous fill level of the FIFO, provided in units of symbols for a FIFO with an Avalon-ST FIFO and words for an Avalon-MM FIFO.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Fill_Level&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;fill_level&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register that shows the FIFO's instantaneous status. See Status Bit Field Description Table for the meaning of each bit field.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Status&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;i_status&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is equal or greater than the almostfull value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is less or equal than the almostempty value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO. OVERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO. UNDERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x2&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register with exactly the same fields as i_status. When a bit in the i_status register is set, the same bit in the event register is set. The bit in the event register is only cleared when software writes a 1 to that bit.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Event&amp;lt;/displayName&amp;gt;
          &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
          &amp;lt;name&amp;gt;event&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been full and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been empty and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been greater than the almostfull threshold value and the bit has not been cleared by software&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been less than the almostempty value and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has overflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has underflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x3&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit interrupt enable register with exactly the same fields as the event and i_status registers. When a bit in the event register transitions from a 0 to a 1, and the corresponding bit in interruptenable is set, the master Is interrupted.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Interrupt_Enable&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;interruptenable&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is greater than the value of the almostfull register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is less than the value of the almostempty register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:6]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables all 6 status conditions to interrupt.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is Depth-4. The default threshold value for SCFIFO is Depth-1. The valid range of the threshold value is from 1 to the default. 1 is used when attempting to write a value smaller than 1. The default is used when attempting to write a value larger than the default.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Full&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostfull&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x5&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is 1. The default threshold value for SCFIFO is 1. The valid range of the threshold value is from 1 to the maximum allowable almostfull threshold. 1 is used when attempting to write a value smaller than 1. The maximum allowable is used when attempting to write a value larger than the maximum allowable.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Empty&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostempty&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                    &lt;addressGroup&gt;&lt;/addressGroup&gt;
                    &lt;cmsisVars/&gt;
                &lt;/cmsisInfo&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_fifo&lt;/className&gt;
        &lt;version&gt;19.1.0&lt;/version&gt;
        &lt;displayName&gt;Avalon FIFO Memory Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;deviceFamilyString&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FAMILY&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_csr&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_csr&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='in_csr' start='0x0' end='0x20' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;5&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='out' start='0x0' end='0x8' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;3&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclock&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset_in&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_channel&lt;/name&gt;
                    &lt;role&gt;channel&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_error&lt;/name&gt;
                    &lt;role&gt;error&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_startofpacket&lt;/name&gt;
                    &lt;role&gt;startofpacket&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_endofpacket&lt;/name&gt;
                    &lt;role&gt;endofpacket&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_sink_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;255&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_read_slave_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_read_slave_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_read_slave_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_read_slave_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
            &lt;cmsisInfo&gt;
                &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;2&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO MM OUT&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;16&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;FIFO_OUT&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;symbols&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[31:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;symbol&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The control register has four defined bits. ITO (Timeout Interrupt), CONT (continue), START, STOP&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Packet&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;packet&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the startofpacket signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;SOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the endofpacket signal.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the empty signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[15:8]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the channel signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 5, bits 8 to 12 are occupied and bits 13 to 15 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;CHANNEL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[23:16]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the error signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 3, bits 16 to 18 are occupied and bits 19 to 23 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ERROR&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                &lt;addressGroup&gt;&lt;/addressGroup&gt;
                &lt;cmsisVars/&gt;
            &lt;/cmsisInfo&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in_csr&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
            &lt;cmsisInfo&gt;
                &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO IN CSR&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The instantaneous fill level of the FIFO, provided in units of symbols for a FIFO with an Avalon-ST FIFO and words for an Avalon-MM FIFO.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Fill_Level&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;fill_level&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register that shows the FIFO's instantaneous status. See Status Bit Field Description Table for the meaning of each bit field.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Status&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;i_status&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is equal or greater than the almostfull value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is less or equal than the almostempty value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO. OVERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO. UNDERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x2&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register with exactly the same fields as i_status. When a bit in the i_status register is set, the same bit in the event register is set. The bit in the event register is only cleared when software writes a 1 to that bit.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Event&amp;lt;/displayName&amp;gt;
          &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
          &amp;lt;name&amp;gt;event&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been full and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been empty and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been greater than the almostfull threshold value and the bit has not been cleared by software&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been less than the almostempty value and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has overflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has underflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x3&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit interrupt enable register with exactly the same fields as the event and i_status registers. When a bit in the event register transitions from a 0 to a 1, and the corresponding bit in interruptenable is set, the master Is interrupted.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Interrupt_Enable&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;interruptenable&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is greater than the value of the almostfull register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is less than the value of the almostempty register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:6]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables all 6 status conditions to interrupt.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is Depth-4. The default threshold value for SCFIFO is Depth-1. The valid range of the threshold value is from 1 to the default. 1 is used when attempting to write a value smaller than 1. The default is used when attempting to write a value larger than the default.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Full&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostfull&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x5&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is 1. The default threshold value for SCFIFO is 1. The valid range of the threshold value is from 1 to the maximum allowable almostfull threshold. 1 is used when attempting to write a value smaller than 1. The maximum allowable is used when attempting to write a value larger than the maximum allowable.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Empty&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostempty&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                &lt;addressGroup&gt;&lt;/addressGroup&gt;
                &lt;cmsisVars/&gt;
            &lt;/cmsisInfo&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_fifo_1&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_fifo_1.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.AVALONMM_AVALONMM_DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.AVALONMM_AVALONST_DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.BITS_PER_SYMBOL&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.CHANNEL_WIDTH&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ERROR_WIDTH&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.FIFO_DEPTH&lt;/key&gt;
            &lt;value&gt;1024&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SINGLE_CLOCK_MODE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SYMBOLS_PER_BEAT&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONMM_READ_SLAVE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONMM_WRITE_SLAVE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONST_SINK&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONST_SOURCE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_BACKPRESSURE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_IRQ&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_PACKET&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_READ_CONTROL&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_REGISTER&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_WRITE_CONTROL&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
      <altera:module altera:enabled="true" altera:auto_export="false">
        <altera:entity_info>
          <ipxact:vendor>Altera Corporation</ipxact:vendor>
          <ipxact:library>tx_fifo</ipxact:library>
          <ipxact:name>altera_generic_component</ipxact:name>
          <ipxact:version>1.0</ipxact:version>
        </altera:entity_info>
        <altera:altera_module_parameters>
          <ipxact:parameters>
            <ipxact:parameter parameterId="componentDefinition" type="string">
              <ipxact:name>componentDefinition</ipxact:name>
              <ipxact:displayName>Component definition</ipxact:displayName>
              <ipxact:value>&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclock&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset_in&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_write_slave_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_write_slave_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_write_slave_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonmm_write_slave_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
                &lt;cmsisInfo&gt;
                    &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;2&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO ST IN&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;16&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;FIFO_IN&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;symbols&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[31:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;symbol&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The control register has four defined bits. ITO (Timeout Interrupt), CONT (continue), START, STOP&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Packet&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;packet&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the startofpacket signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;SOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the endofpacket signal.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the empty signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[15:8]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the channel signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 5, bits 8 to 12 are occupied and bits 13 to 15 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;CHANNEL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[23:16]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the error signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 3, bits 16 to 18 are occupied and bits 19 to 23 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ERROR&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                    &lt;addressGroup&gt;&lt;/addressGroup&gt;
                    &lt;cmsisVars/&gt;
                &lt;/cmsisInfo&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_channel&lt;/name&gt;
                        &lt;role&gt;channel&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_error&lt;/name&gt;
                        &lt;role&gt;error&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_startofpacket&lt;/name&gt;
                        &lt;role&gt;startofpacket&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_endofpacket&lt;/name&gt;
                        &lt;role&gt;endofpacket&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avalonst_source_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;255&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in_csr&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;wrclk_control_slave_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                        &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
                &lt;cmsisInfo&gt;
                    &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO IN CSR&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The instantaneous fill level of the FIFO, provided in units of symbols for a FIFO with an Avalon-ST FIFO and words for an Avalon-MM FIFO.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Fill_Level&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;fill_level&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register that shows the FIFO's instantaneous status. See Status Bit Field Description Table for the meaning of each bit field.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Status&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;i_status&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is equal or greater than the almostfull value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is less or equal than the almostempty value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO. OVERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO. UNDERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x2&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register with exactly the same fields as i_status. When a bit in the i_status register is set, the same bit in the event register is set. The bit in the event register is only cleared when software writes a 1 to that bit.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Event&amp;lt;/displayName&amp;gt;
          &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
          &amp;lt;name&amp;gt;event&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been full and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been empty and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been greater than the almostfull threshold value and the bit has not been cleared by software&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been less than the almostempty value and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has overflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has underflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x3&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit interrupt enable register with exactly the same fields as the event and i_status registers. When a bit in the event register transitions from a 0 to a 1, and the corresponding bit in interruptenable is set, the master Is interrupted.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Interrupt_Enable&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;interruptenable&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is greater than the value of the almostfull register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is less than the value of the almostempty register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:6]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables all 6 status conditions to interrupt.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is Depth-4. The default threshold value for SCFIFO is Depth-1. The valid range of the threshold value is from 1 to the default. 1 is used when attempting to write a value smaller than 1. The default is used when attempting to write a value larger than the default.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Full&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostfull&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x5&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is 1. The default threshold value for SCFIFO is 1. The valid range of the threshold value is from 1 to the maximum allowable almostfull threshold. 1 is used when attempting to write a value smaller than 1. The maximum allowable is used when attempting to write a value larger than the maximum allowable.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Empty&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostempty&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                    &lt;addressGroup&gt;&lt;/addressGroup&gt;
                    &lt;cmsisVars/&gt;
                &lt;/cmsisInfo&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_fifo&lt;/className&gt;
        &lt;version&gt;19.1.0&lt;/version&gt;
        &lt;displayName&gt;Avalon FIFO Memory Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;deviceFamilyString&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FAMILY&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='in' start='0x0' end='0x8' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;3&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;in_csr&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_csr&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name='in_csr' start='0x0' end='0x20' datawidth='32' /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;5&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="defaultBoundary" type="string">
              <ipxact:name>defaultBoundary</ipxact:name>
              <ipxact:displayName>Default boundary</ipxact:displayName>
              <ipxact:value>&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclock&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset_in&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_write_slave_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_write_slave_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_write_slave_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonmm_write_slave_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
            &lt;cmsisInfo&gt;
                &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;2&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO ST IN&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;16&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;FIFO_IN&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;symbols&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[31:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Packet data. The value of the Symbols per beat parameter specifies the number of fields in this register; Bits per symbol specifies the width of each field&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;symbol&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The control register has four defined bits. ITO (Timeout Interrupt), CONT (continue), START, STOP&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Packet&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;packet&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the startofpacket signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;SOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the endofpacket signal.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EOP&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the empty signal&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[15:8]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the channel signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 5, bits 8 to 12 are occupied and bits 13 to 15 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;CHANNEL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;write-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[23:16]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;The value of the error signal. The number of bits occupied corresponds to the width of the signal. For example, if the width of the channel signal is 3, bits 16 to 18 are occupied and bits 19 to 23 are unused.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ERROR&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                &lt;addressGroup&gt;&lt;/addressGroup&gt;
                &lt;cmsisVars/&gt;
            &lt;/cmsisInfo&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_channel&lt;/name&gt;
                    &lt;role&gt;channel&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_error&lt;/name&gt;
                    &lt;role&gt;error&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_startofpacket&lt;/name&gt;
                    &lt;role&gt;startofpacket&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_endofpacket&lt;/name&gt;
                    &lt;role&gt;endofpacket&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avalonst_source_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;255&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in_csr&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;wrclk_control_slave_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;terminationValue&gt;0&lt;/terminationValue&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
            &lt;cmsisInfo&gt;
                &lt;cmsisSrcFileContents&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"&amp;gt;
  &amp;lt;peripherals&amp;gt;
    &amp;lt;peripheral&amp;gt;
      &amp;lt;name&amp;gt;altera_avalon_fifo&amp;lt;/name&amp;gt;
      &amp;lt;addressBlock&amp;gt;
        &amp;lt;offset&amp;gt;0x0&amp;lt;/offset&amp;gt;
        &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
        &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
      &amp;lt;/addressBlock&amp;gt;
      &amp;lt;description&amp;gt;Avalon FIFO IN CSR&amp;lt;/description&amp;gt;
      &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
      &amp;lt;baseAddress&amp;gt;0x00000000&amp;lt;/baseAddress&amp;gt;
      &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
      &amp;lt;registers&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x0&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;The instantaneous fill level of the FIFO, provided in units of symbols for a FIFO with an Avalon-ST FIFO and words for an Avalon-MM FIFO.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Fill_Level&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;fill_level&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x1&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register that shows the FIFO's instantaneous status. See Status Bit Field Description Table for the meaning of each bit field.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Status&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;i_status&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is equal or greater than the almostfull value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO is less or equal than the almostempty value.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO. OVERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-only&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Is set to 1 for 1 cycle every time the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO. UNDERFLOW is only valid when Allow backpressure is off.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x2&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit register with exactly the same fields as i_status. When a bit in the i_status register is set, the same bit in the event register is set. The bit in the event register is only cleared when software writes a 1 to that bit.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Event&amp;lt;/displayName&amp;gt;
          &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
          &amp;lt;name&amp;gt;event&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been full and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has been empty and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been greater than the almostfull threshold value and the bit has not been cleared by software&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the fill level of the FIFO has been less than the almostempty value and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has overflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Has a value of 1 if the FIFO has underflowed and the bit has not been cleared by software.&amp;lt;/description&amp;gt;
              &amp;lt;modifiedWriteValues&amp;gt;oneToClear&amp;lt;/modifiedWriteValues&amp;gt;
              &amp;lt;name&amp;gt;E_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x3&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A 6-bit interrupt enable register with exactly the same fields as the event and i_status registers. When a bit in the event register transitions from a 0 to a 1, and the corresponding bit in interruptenable is set, the master Is interrupted.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Interrupt_Enable&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;interruptenable&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;6&amp;lt;/size&amp;gt;
          &amp;lt;fields&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently full.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_FULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[1:1]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO is currently empty.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_EMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[2:2]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is greater than the value of the almostfull register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTFULL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[3:3]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the fill level of the FIFO is less than the value of the almostempty register.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_ALMOSTEMPTY&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[4:4]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO overflows. The FIFO overflows when an Avalon write master writes to a full FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_OVERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[5:5]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables an interrupt if the FIFO underflows. The FIFO underflows when an Avalon read master reads from an empty FIFO.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;IE_UNDERFLOW&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
            &amp;lt;field&amp;gt;
              &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
              &amp;lt;bitRange&amp;gt;[6:6]&amp;lt;/bitRange&amp;gt;
              &amp;lt;description&amp;gt;Enables all 6 status conditions to interrupt.&amp;lt;/description&amp;gt;
              &amp;lt;name&amp;gt;ALL&amp;lt;/name&amp;gt;
            &amp;lt;/field&amp;gt;
          &amp;lt;/fields&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x4&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is Depth-4. The default threshold value for SCFIFO is Depth-1. The valid range of the threshold value is from 1 to the default. 1 is used when attempting to write a value smaller than 1. The default is used when attempting to write a value larger than the default.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Full&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostfull&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
        &amp;lt;register&amp;gt;
          &amp;lt;access&amp;gt;read-write&amp;lt;/access&amp;gt;
          &amp;lt;addressOffset&amp;gt;0x5&amp;lt;/addressOffset&amp;gt;
          &amp;lt;description&amp;gt;A threshold level used for interrupts and status. Can be written by the Avalon-MM status master at any time. The default threshold value for DCFIFO is 1. The default threshold value for SCFIFO is 1. The valid range of the threshold value is from 1 to the maximum allowable almostfull threshold. 1 is used when attempting to write a value smaller than 1. The maximum allowable is used when attempting to write a value larger than the maximum allowable.&amp;lt;/description&amp;gt;
          &amp;lt;displayName&amp;gt;Almost_Empty&amp;lt;/displayName&amp;gt;
          &amp;lt;name&amp;gt;almostempty&amp;lt;/name&amp;gt;
          &amp;lt;resetMask&amp;gt;0xffffffff&amp;lt;/resetMask&amp;gt;
          &amp;lt;resetValue&amp;gt;0x0&amp;lt;/resetValue&amp;gt;
          &amp;lt;size&amp;gt;32&amp;lt;/size&amp;gt;
        &amp;lt;/register&amp;gt;
      &amp;lt;/registers&amp;gt;
    &amp;lt;/peripheral&amp;gt;
  &amp;lt;/peripherals&amp;gt;
&amp;lt;/device&amp;gt;&lt;/cmsisSrcFileContents&gt;
                &lt;addressGroup&gt;&lt;/addressGroup&gt;
                &lt;cmsisVars/&gt;
            &lt;/cmsisInfo&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="generationInfoDefinition" type="string">
              <ipxact:name>generationInfoDefinition</ipxact:name>
              <ipxact:displayName>Generation Behavior</ipxact:displayName>
              <ipxact:value>&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;soc_fifo_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;soc_fifo_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;soc_fifo_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;CDC&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hdlParameters" type="string">
              <ipxact:name>hdlParameters</ipxact:name>
              <ipxact:displayName>HDL Parameters</ipxact:displayName>
              <ipxact:value>&lt;hdlParameterDescriptorDefinitionList/&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="hlsFile" type="string">
              <ipxact:name>hlsFile</ipxact:name>
              <ipxact:displayName>HLS file</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="logicalView" type="string">
              <ipxact:name>logicalView</ipxact:name>
              <ipxact:displayName>Logical view</ipxact:displayName>
              <ipxact:value>ip/soc/soc_fifo_0.ip</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="moduleAssignmentDefinition" type="string">
              <ipxact:name>moduleAssignmentDefinition</ipxact:name>
              <ipxact:displayName>Module Assignments</ipxact:displayName>
              <ipxact:value>&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.AVALONMM_AVALONMM_DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.AVALONMM_AVALONST_DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.BITS_PER_SYMBOL&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.CHANNEL_WIDTH&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ERROR_WIDTH&lt;/key&gt;
            &lt;value&gt;8&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.FIFO_DEPTH&lt;/key&gt;
            &lt;value&gt;1024&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SINGLE_CLOCK_MODE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.SYMBOLS_PER_BEAT&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONMM_READ_SLAVE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONMM_WRITE_SLAVE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONST_SINK&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_AVALONST_SOURCE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_BACKPRESSURE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_IRQ&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_PACKET&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_READ_CONTROL&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_REGISTER&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.USE_WRITE_CONTROL&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;</ipxact:value>
            </ipxact:parameter>
            <ipxact:parameter parameterId="svInterfaceDefinition" type="string">
              <ipxact:name>svInterfaceDefinition</ipxact:name>
              <ipxact:displayName>System Verilog Interface definition</ipxact:displayName>
              <ipxact:value></ipxact:value>
            </ipxact:parameter>
          </ipxact:parameters>
        </altera:altera_module_parameters>
      </altera:module>
    </altera:modules>
    <altera:connections>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="jtag_uart_0.avalon_jtag_slave">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020090"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="intel_niosv_m_0.dm_agent">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00010000"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="tx_fifo.in">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020088"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="tx_fifo.in_csr">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020060"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="rx_fifo.in_csr">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020040"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="rx_fifo.out">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020080"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="ram64k.s1">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x0000"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.data_manager" altera:end="intel_niosv_m_0.timer_sw_agent">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00020000"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.instruction_manager" altera:end="intel_niosv_m_0.dm_agent">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x00010000"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon" altera:version="21.3" altera:start="intel_niosv_m_0.instruction_manager" altera:end="ram64k.s1">
        <altera:connection_parameter altera:parameter_name="arbitrationPriority" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="baseAddress" altera:parameter_value="0x0000"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="defaultConnection" altera:parameter_value="false"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="domainAlias" altera:parameter_value=""></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="TRUE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="avalon_streaming" altera:version="21.3" altera:start="tx_fifo.out" altera:end="rx_fifo.in">
        <altera:connection_parameter altera:parameter_name="qsys_mm.burstAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.clockCrossingAdapter" altera:parameter_value="HANDSHAKE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableAllPipelines" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableEccProtection" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.enableInstrumentation" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.insertDefaultSlave" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectResetSource" altera:parameter_value="DEFAULT"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.interconnectType" altera:parameter_value="STANDARD"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.maxAdditionalLatency" altera:parameter_value="1"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.optimizeRdFifoSize" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.piplineType" altera:parameter_value="PIPELINE_STAGE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.syncResets" altera:parameter_value="FALSE"></altera:connection_parameter>
        <altera:connection_parameter altera:parameter_name="qsys_mm.widthAdapterImplementation" altera:parameter_value="GENERIC_CONVERTER"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="reset_in_100.clk"></altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="intel_niosv_m_0.clk"></altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="jtag_uart_0.clk"></altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="ram64k.clk1"></altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="tx_fifo.clk_in"></altera:connection>
      <altera:connection altera:kind="clock" altera:version="21.3" altera:start="clock_in_100.out_clk" altera:end="rx_fifo.clk_in"></altera:connection>
      <altera:connection altera:kind="interrupt" altera:version="21.3" altera:start="intel_niosv_m_0.platform_irq_rx" altera:end="jtag_uart_0.irq">
        <altera:connection_parameter altera:parameter_name="irqNumber" altera:parameter_value="0"></altera:connection_parameter>
      </altera:connection>
      <altera:connection altera:kind="reset" altera:version="21.3" altera:start="reset_in_100.out_reset" altera:end="intel_niosv_m_0.reset"></altera:connection>
      <altera:connection altera:kind="reset" altera:version="21.3" altera:start="reset_in_100.out_reset" altera:end="jtag_uart_0.reset"></altera:connection>
      <altera:connection altera:kind="reset" altera:version="21.3" altera:start="reset_in_100.out_reset" altera:end="ram64k.reset1"></altera:connection>
      <altera:connection altera:kind="reset" altera:version="21.3" altera:start="reset_in_100.out_reset" altera:end="rx_fifo.reset_in"></altera:connection>
      <altera:connection altera:kind="reset" altera:version="21.3" altera:start="reset_in_100.out_reset" altera:end="tx_fifo.reset_in"></altera:connection>
    </altera:connections>
    <altera:interconnect_requirements></altera:interconnect_requirements>
    <altera:wire_level_connections></altera:wire_level_connections>
    <altera:hdl_parameters></altera:hdl_parameters>
    <altera:hdl_parameter_mappings></altera:hdl_parameter_mappings>
    <altera:preserved_ports_for_debug></altera:preserved_ports_for_debug>
    <altera:altera_interface_boundary>
      <altera:interface_mapping altera:name="clk" altera:internal="clock_in_100.in_clk" altera:type="clock" altera:dir="end"></altera:interface_mapping>
      <altera:interface_mapping altera:name="reset" altera:internal="reset_in_100.in_reset" altera:type="reset" altera:dir="end"></altera:interface_mapping>
    </altera:altera_interface_boundary>
    <ipxact:components>
      <ipxact:component>
        <ipxact:vendor>Intel Corporation</ipxact:vendor>
        <ipxact:library>addressMap</ipxact:library>
        <ipxact:name>addressMap</ipxact:name>
        <ipxact:version>1.0</ipxact:version>
        <ipxact:busInterfaces>
          <ipxact:busInterface>
            <ipxact:name>intel_niosv_m_0.dm_agent</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>ram64k.s1</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>intel_niosv_m_0.instruction_manager</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="axi4" version="21.3"></ipxact:busType>
            <ipxact:master>
              <ipxact:addressSpaceRef addressSpaceRef="intel_niosv_m_0.instruction_manager">
                <ipxact:baseAddress>0x0001_0000</ipxact:baseAddress>
              </ipxact:addressSpaceRef>
            </ipxact:master>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>intel_niosv_m_0.timer_sw_agent</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>intel_niosv_m_0.dm_agent</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>ram64k.s1</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>jtag_uart_0.avalon_jtag_slave</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>tx_fifo.in</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>tx_fifo.in_csr</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>rx_fifo.out</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>rx_fifo.in_csr</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="avalon" version="21.3"></ipxact:busType>
          </ipxact:busInterface>
          <ipxact:busInterface>
            <ipxact:name>intel_niosv_m_0.data_manager</ipxact:name>
            <ipxact:busType vendor="intel" library="intel" name="axi4" version="21.3"></ipxact:busType>
            <ipxact:master>
              <ipxact:addressSpaceRef addressSpaceRef="intel_niosv_m_0.data_manager">
                <ipxact:baseAddress>0x0002_0000</ipxact:baseAddress>
              </ipxact:addressSpaceRef>
            </ipxact:master>
          </ipxact:busInterface>
        </ipxact:busInterfaces>
        <ipxact:addressSpaces>
          <ipxact:addressSpace>
            <ipxact:name>intel_niosv_m_0.instruction_manager</ipxact:name>
            <ipxact:segments>
              <ipxact:segment>
                <ipxact:name>intel_niosv_m_0.dm_agent</ipxact:name>
                <ipxact:addressOffset>0x0001_0000</ipxact:addressOffset>
                <ipxact:range>0x0001_0000</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>ram64k.s1</ipxact:name>
                <ipxact:addressOffset>0x0000_0000</ipxact:addressOffset>
                <ipxact:range>0x0001_0000</ipxact:range>
              </ipxact:segment>
            </ipxact:segments>
          </ipxact:addressSpace>
          <ipxact:addressSpace>
            <ipxact:name>intel_niosv_m_0.data_manager</ipxact:name>
            <ipxact:segments>
              <ipxact:segment>
                <ipxact:name>intel_niosv_m_0.timer_sw_agent</ipxact:name>
                <ipxact:addressOffset>0x0002_0000</ipxact:addressOffset>
                <ipxact:range>0x0000_0040</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>intel_niosv_m_0.dm_agent</ipxact:name>
                <ipxact:addressOffset>0x0001_0000</ipxact:addressOffset>
                <ipxact:range>0x0001_0000</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>ram64k.s1</ipxact:name>
                <ipxact:addressOffset>0x0000_0000</ipxact:addressOffset>
                <ipxact:range>0x0001_0000</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>jtag_uart_0.avalon_jtag_slave</ipxact:name>
                <ipxact:addressOffset>0x0002_0090</ipxact:addressOffset>
                <ipxact:range>0x0000_0008</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>tx_fifo.in</ipxact:name>
                <ipxact:addressOffset>0x0002_0088</ipxact:addressOffset>
                <ipxact:range>0x0000_0008</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>tx_fifo.in_csr</ipxact:name>
                <ipxact:addressOffset>0x0002_0060</ipxact:addressOffset>
                <ipxact:range>0x0000_0020</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>rx_fifo.out</ipxact:name>
                <ipxact:addressOffset>0x0002_0080</ipxact:addressOffset>
                <ipxact:range>0x0000_0008</ipxact:range>
              </ipxact:segment>
              <ipxact:segment>
                <ipxact:name>rx_fifo.in_csr</ipxact:name>
                <ipxact:addressOffset>0x0002_0040</ipxact:addressOffset>
                <ipxact:range>0x0000_0020</ipxact:range>
              </ipxact:segment>
            </ipxact:segments>
          </ipxact:addressSpace>
        </ipxact:addressSpaces>
        <ipxact:memoryMaps></ipxact:memoryMaps>
      </ipxact:component>
    </ipxact:components>
    <altera:altera_has_warnings>false</altera:altera_has_warnings>
    <altera:altera_has_errors>false</altera:altera_has_errors>
  </ipxact:vendorExtensions>
</ipxact:design>